######################################################################
# grafana
######################################################################

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: pgrwl-test
  labels:
    grafana_datasource: "1"
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true
  loki.yaml: |
    apiVersion: 1
    datasources:
      - name: Loki
        type: loki
        access: proxy
        url: http://loki:3100
        jsonData:
          maxLines: 1000

######################################################################
# loki
######################################################################

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: pgrwl-test
data:
  loki.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 3100

    ingester:
      wal:
        dir: "/tmp/wal"
      lifecycler:
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1
      chunk_idle_period: 3m
      chunk_retain_period: 1m
      max_transfer_retries: 0
      max_returned_stream_errors: 10

    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 168h

    storage_config:
      boltdb:
        directory: /loki/index

      filesystem:
        directory: /loki/chunks

    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h

    chunk_store_config:
      max_look_back_period: 0s

    table_manager:
      retention_deletes_enabled: true
      retention_period: 720h


######################################################################
# alertmanager
######################################################################

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: pgrwl-test
data:
  alertmanager.yaml: |
    global:
      resolve_timeout: 5m
    route:
      group_interval: 5m
      group_wait: 10s
      repeat_interval: 3h
      group_by: ["..."]
      receiver: telegram
      routes:
        - receiver: telegram
          continue: True
    receivers:
      - name: telegram
        telegram_configs:
          - send_resolved: true
            bot_token: "0"
            chat_id: 102030405060
            api_url: "https://api.telegram.org"
            parse_mode: HTML
            message: |
              {{ template "telegram.custom.message" . }}
    templates:
      - /etc/alertmanager/templates/*.tmpl

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-template-tg
  namespace: pgrwl-test
data:
  alertmanager-tg.tmpl: |
    {{ define "title.alert.mbcaas" -}}
    {{- if eq .Labels.severity "critical"}}
    <b>üî¥ CRITICAL üî¥</b>
    {{- else if eq .Labels.severity "warning"}}
    <b>üü° WARNING üü°</b>
    {{- else if eq .Labels.severity "info"}}
    <b>‚ÑπÔ∏è INFO ‚ÑπÔ∏è</b>
    {{- else }}
    <b>‚ùî {{ .Labels.severity | toUpper }} ‚ùî</b>
    {{- end -}}
    {{- end -}}

    {{ define "__text_alert_list" }}{{ range . }}
    {{ if .Labels.alertname }} <b>{{ .Labels.alertname }}</b> {{ end }}
    {{ template "title.alert.mbcaas" . }}
    <b>Start:</b> {{ .StartsAt.Format "2006-01-02 15:04:05" }}

    <b>Labels:</b>
    {{ range .Labels.SortedPairs }} - {{ .Name }} = {{ .Value }}
    {{ end }}
    <b>Annotations:</b>
    {{ range .Annotations.SortedPairs }} - {{ .Name }} = {{ .Value }}
    {{ end }}
    {{ end }}{{ end }}

    {{ define "__text_alert_list_resolved" }}{{ range . }}
    {{ if .Labels.alertname }} <b>{{ .Labels.alertname }}</b> {{ end }}
    <b>{{ .Labels.severity | toUpper }}</b>
    <b>Start:</b> {{ .StartsAt.Format "2006-01-02 15:04:05" }}
    <b>End:</b> {{ .EndsAt.Format "2006-01-02 15:04:05" }}

    <b>Labels:</b>
    {{ range .Labels.SortedPairs }} - {{ .Name }} = {{ .Value }}
    {{ end }}
    <b>Annotations:</b>
    {{ range .Annotations.SortedPairs }} - {{ .Name }} = {{ .Value }}
    {{ end }}
    {{ end }}{{ end }}

    {{ define "telegram.custom.message" }}
    {{ if gt (len .Alerts.Firing) 0 }}
    üö®üö® <b>FIRING ALERTS</b> üö®üö®
    {{ template "__text_alert_list" .Alerts.Firing }}
    {{ end }}
    {{ if gt (len .Alerts.Resolved) 0 }}
    ‚úÖ‚úÖ <b>RESOLVED ALERTS</b> ‚úÖ‚úÖ
    {{ template "__text_alert_list_resolved" .Alerts.Resolved }}
    {{ end }}
    {{ end }}


######################################################################
# promtail
######################################################################

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: pgrwl-test
data:
  promtail.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0
      log_level: debug

    positions:
      filename: /run/promtail/positions.yaml

    clients:
      - url: http://loki:3100/loki/api/v1/push

    scrape_configs:
      - job_name: system
        static_configs:
          - targets:
              - localhost
            labels:
              job: varlogs
              __path__: /var/log/*log

      - job_name: kubernetes-pods-name
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_label_app
            target_label: __service__
          - source_labels:
              - __meta_kubernetes_pod_node_app
            target_label: __host_
          - source_labels:
              - __meta_kubernetes_pod_app
            target_label: k8s_pod_app
          - action: replace
            replacement: $1
            separator: /
            source_labels:
              - __meta_kubernetes_namespace
              - __service__
            target_label: k8s_app
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: k8s_namespace_name
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_app
            target_label: k8s_pod_name
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_container_name
            target_label: k8s_container_name
          - replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
              - __meta_kubernetes_pod_uid
              - __meta_kubernetes_pod_container_name
            target_label: __path__
          - replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
              - __meta_kubernetes_pod_uid
              - __meta_kubernetes_pod_container_name
            target_label: __path__
          - replacement: /var/log/pods/*$1/$2/*.log
            separator: /
            source_labels:
              - __meta_kubernetes_pod_uid
              - __meta_kubernetes_pod_container_name
            target_label: __path__

      - job_name: kubernetes-pods-name2
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_label_name
            target_label: __service__
          - source_labels:
              - __meta_kubernetes_pod_node_name
            target_label: __host__
          - action: drop
            regex: ^$
            source_labels:
              - __service__
          - action: replace
            replacement: $1
            separator: /
            source_labels:
              - __meta_kubernetes_namespace
              - __service__
            target_label: job
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: instance
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_container_name
            target_label: container_name
          - replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
              - __meta_kubernetes_pod_uid
              - __meta_kubernetes_pod_container_name
            target_label: __path__

      - job_name: kubernetes-pods-app
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: drop
            regex: .+
            source_labels:
              - __meta_kubernetes_pod_label_name
          - source_labels:
              - __meta_kubernetes_pod_label_app
            target_label: __service__
          - source_labels:
              - __meta_kubernetes_pod_node_name
            target_label: __host__
          - action: drop
            regex: ^$
            source_labels:
              - __service__
          - action: replace
            replacement: $1
            separator: /
            source_labels:
              - __meta_kubernetes_namespace
              - __service__
            target_label: job
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: instance
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_container_name
            target_label: container_name
          - replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
              - __meta_kubernetes_pod_uid
              - __meta_kubernetes_pod_container_name
            target_label: __path__

      - job_name: kubernetes-pods-direct-controllers
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: drop
            regex: .+
            separator: ""
            source_labels:
              - __meta_kubernetes_pod_label_name
              - __meta_kubernetes_pod_label_app
          - action: drop
            regex: ^([0-9a-z-.]+)(-[0-9a-f]{8,10})$
            source_labels:
              - __meta_kubernetes_pod_controller_name
          - source_labels:
              - __meta_kubernetes_pod_controller_name
            target_label: __service__
          - source_labels:
              - __meta_kubernetes_pod_node_name
            target_label: __host__
          - action: drop
            regex: ^$
            source_labels:
              - __service__
          - action: replace
            replacement: $1
            separator: /
            source_labels:
              - __meta_kubernetes_namespace
              - __service__
            target_label: job
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: instance
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_container_name
            target_label: container_name
          - replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
              - __meta_kubernetes_pod_uid
              - __meta_kubernetes_pod_container_name
            target_label: __path__

      - job_name: kubernetes-pods-indirect-controller
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: drop
            regex: .+
            separator: ""
            source_labels:
              - __meta_kubernetes_pod_label_name
              - __meta_kubernetes_pod_label_app
          - action: keep
            regex: ^([0-9a-z-.]+)(-[0-9a-f]{8,10})$
            source_labels:
              - __meta_kubernetes_pod_controller_name
          - action: replace
            regex: ^([0-9a-z-.]+)(-[0-9a-f]{8,10})$
            source_labels:
              - __meta_kubernetes_pod_controller_name
            target_label: __service__
          - source_labels:
              - __meta_kubernetes_pod_node_name
            target_label: __host__
          - action: drop
            regex: ^$
            source_labels:
              - __service__
          - action: replace
            replacement: $1
            separator: /
            source_labels:
              - __meta_kubernetes_namespace
              - __service__
            target_label: job
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: instance
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_container_name
            target_label: container_name
          - replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
              - __meta_kubernetes_pod_uid
              - __meta_kubernetes_pod_container_name
            target_label: __path__

      - job_name: kubernetes-pods-static
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: drop
            regex: ^$
            source_labels:
              - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_label_component
            target_label: __service__
          - source_labels:
              - __meta_kubernetes_pod_node_name
            target_label: __host__
          - action: drop
            regex: ^$
            source_labels:
              - __service__
          - action: replace
            replacement: $1
            separator: /
            source_labels:
              - __meta_kubernetes_namespace
              - __service__
            target_label: job
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: instance
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_container_name
            target_label: container_name
          - replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
              - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
              - __meta_kubernetes_pod_container_name
            target_label: __path__


######################################################################
# prometheus
######################################################################

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: pgrwl-test
data:
  prometheus.yml: |+
    global:
      evaluation_interval: 1m
      scrape_interval: 1m
      scrape_timeout: 10s
    alerting:
      alertmanagers:
        - static_configs:
            - targets: ["alertmanager:9093"]
    rule_files:
      - /etc/config/alerts/alert-rules-kube.yml
      # - /etc/config/recording_rules.yml
      # - /etc/config/alerting_rules.yml
      # - /etc/config/rules
    scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets:
              - localhost:9090
      - job_name: "kube-state-metrics"
        static_configs:
          - targets:
              - "kube-state-metrics:8080"
      - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        job_name: kubernetes-apiservers
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - action: keep
            regex: default;kubernetes;https
            source_labels:
              - __meta_kubernetes_namespace
              - __meta_kubernetes_service_name
              - __meta_kubernetes_endpoint_port_name
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        job_name: kubernetes-nodes
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - replacement: kubernetes.default.svc:443
            target_label: __address__
          - regex: (.+)
            replacement: /api/v1/nodes/$1/proxy/metrics
            source_labels:
              - __meta_kubernetes_node_name
            target_label: __metrics_path__
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      - bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        job_name: kubernetes-nodes-cadvisor
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - replacement: kubernetes.default.svc:443
            target_label: __address__
          - regex: (.+)
            replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
            source_labels:
              - __meta_kubernetes_node_name
            target_label: __metrics_path__
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      - honor_labels: true
        job_name: kubernetes-service-endpoints
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - action: keep
            regex: true
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape
          - action: drop
            regex: true
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow
          - action: replace
            regex: (https?)
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scheme
            target_label: __scheme__
          - action: replace
            regex: (.+)
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path
            target_label: __metrics_path__
          - action: replace
            regex: (.+?)(?::\d+)?;(\d+)
            replacement: $1:$2
            source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
            replacement: __param_$1
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
              - __meta_kubernetes_service_name
            target_label: service
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_node_name
            target_label: node
      - honor_labels: true
        job_name: kubernetes-service-endpoints-slow
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - action: keep
            regex: true
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow
          - action: replace
            regex: (https?)
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_scheme
            target_label: __scheme__
          - action: replace
            regex: (.+)
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_path
            target_label: __metrics_path__
          - action: replace
            regex: (.+?)(?::\d+)?;(\d+)
            replacement: $1:$2
            source_labels:
              - __address__
              - __meta_kubernetes_service_annotation_prometheus_io_port
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
            replacement: __param_$1
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
              - __meta_kubernetes_service_name
            target_label: service
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_node_name
            target_label: node
        scrape_interval: 5m
        scrape_timeout: 30s
      - honor_labels: true
        job_name: prometheus-pushgateway
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          - action: keep
            regex: pushgateway
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_probe
      - honor_labels: true
        job_name: kubernetes-services
        kubernetes_sd_configs:
          - role: service
        metrics_path: /probe
        params:
          module:
            - http_2xx
        relabel_configs:
          - action: keep
            regex: true
            source_labels:
              - __meta_kubernetes_service_annotation_prometheus_io_probe
          - source_labels:
              - __address__
            target_label: __param_target
          - replacement: blackbox
            target_label: __address__
          - source_labels:
              - __param_target
            target_label: instance
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - source_labels:
              - __meta_kubernetes_service_name
            target_label: service
      - honor_labels: true
        job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: keep
            regex: true
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape
          - action: drop
            regex: true
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
          - action: replace
            regex: (https?)
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scheme
            target_label: __scheme__
          - action: replace
            regex: (.+)
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path
            target_label: __metrics_path__
          - action: replace
            regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
            replacement: '[$2]:$1'
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_port
              - __meta_kubernetes_pod_ip
            target_label: __address__
          - action: replace
            regex: (\d+);((([0-9]+?)(\.|$)){4})
            replacement: $2:$1
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_port
              - __meta_kubernetes_pod_ip
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
            replacement: __param_$1
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: pod
          - action: drop
            regex: Pending|Succeeded|Failed|Completed
            source_labels:
              - __meta_kubernetes_pod_phase
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_node_name
            target_label: node
      - honor_labels: true
        job_name: kubernetes-pods-slow
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - action: keep
            regex: true
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
          - action: replace
            regex: (https?)
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_scheme
            target_label: __scheme__
          - action: replace
            regex: (.+)
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_path
            target_label: __metrics_path__
          - action: replace
            regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
            replacement: '[$2]:$1'
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_port
              - __meta_kubernetes_pod_ip
            target_label: __address__
          - action: replace
            regex: (\d+);((([0-9]+?)(\.|$)){4})
            replacement: $2:$1
            source_labels:
              - __meta_kubernetes_pod_annotation_prometheus_io_port
              - __meta_kubernetes_pod_ip
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
            replacement: __param_$1
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: pod
          - action: drop
            regex: Pending|Succeeded|Failed|Completed
            source_labels:
              - __meta_kubernetes_pod_phase
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_node_name
            target_label: node
        scrape_interval: 5m
        scrape_timeout: 30s

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alert-rules-kube.yml
  namespace: pgrwl-test
data:
  alert-rules-kube.yml: |
    # https://samber.github.io/awesome-prometheus-alerts/rules#kubernetes
    # https://raw.githubusercontent.com/samber/awesome-prometheus-alerts/master/dist/rules/kubernetes/kubestate-exporter.yml
    ---
    groups:
      - name: KubestateExporter
        rules:
          - alert: KubernetesNodeNotReady
            expr: 'kube_node_status_condition{condition="Ready",status="true"} == 0'
            for: 10m
            labels:
              severity: critical
            annotations:
              summary: Kubernetes Node ready (node {{ $labels.node }})
              description: "Node {{ $labels.node }} has been unready for a long time"
    
          - alert: KubernetesNodeMemoryPressure
            expr: 'kube_node_status_condition{condition="MemoryPressure",status="true"} == 1'
            for: 2m
            labels:
              severity: critical
            annotations:
              summary: Kubernetes memory pressure (node {{ $labels.node }})
              description: "Node {{ $labels.node }} has MemoryPressure condition"
    
          - alert: KubernetesNodeDiskPressure
            expr: 'kube_node_status_condition{condition="DiskPressure",status="true"} == 1'
            for: 2m
            labels:
              severity: critical
            annotations:
              summary: Kubernetes disk pressure (node {{ $labels.node }})
              description: "Node {{ $labels.node }} has DiskPressure condition"
    
          - alert: KubernetesNodeNetworkUnavailable
            expr: 'kube_node_status_condition{condition="NetworkUnavailable",status="true"} == 1'
            for: 2m
            labels:
              severity: critical
            annotations:
              summary: Kubernetes Node network unavailable (instance {{ $labels.instance }})
              description: "Node {{ $labels.node }} has NetworkUnavailable condition"
    
          - alert: KubernetesNodeOutOfPodCapacity
            expr: 'sum by (node) ((kube_pod_status_phase{phase="Running"} == 1) + on(uid) group_left(node) (0 * kube_pod_info{pod_template_hash=""})) / sum by (node) (kube_node_status_allocatable{resource="pods"}) * 100 > 90'
            for: 2m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes Node out of pod capacity (instance {{ $labels.instance }})
              description: "Node {{ $labels.node }} is out of pod capacity"
    
          - alert: KubernetesContainerOomKiller
            expr: '(kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}[10m]) == 1'
            for: 0m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes container oom killer ({{ $labels.namespace }}/{{ $labels.pod }}:{{ $labels.container }})
              description: "Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes."
    
          - alert: KubernetesJobFailed
            expr: "kube_job_status_failed > 0"
            for: 0m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes Job failed ({{ $labels.namespace }}/{{ $labels.job_name }})
              description: "Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete"
    
          - alert: KubernetesCronjobSuspended
            expr: "kube_cronjob_spec_suspend != 0"
            for: 0m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes CronJob suspended ({{ $labels.namespace }}/{{ $labels.cronjob }})
              description: "CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is suspended"
    
          - alert: KubernetesPersistentvolumeclaimPending
            expr: 'kube_persistentvolumeclaim_status_phase{phase="Pending"} == 1'
            for: 2m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes PersistentVolumeClaim pending ({{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }})
              description: "PersistentVolumeClaim {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is pending"
    
          - alert: KubernetesVolumeOutOfDiskSpace
            expr: "kubelet_volume_stats_available_bytes / kubelet_volume_stats_capacity_bytes * 100 < 10"
            for: 2m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes Volume out of disk space (instance {{ $labels.instance }})
              description: "Volume is almost full (< 10% left)"
    
          - alert: KubernetesVolumeFullInFourDays
            expr: "predict_linear(kubelet_volume_stats_available_bytes[6h:5m], 4 * 24 * 3600) < 0"
            for: 0m
            labels:
              severity: critical
            annotations:
              summary: Kubernetes Volume full in four days (instance {{ $labels.instance }})
              description: "Volume under {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is expected to fill up within four days. Currently {{ $value | humanize }}% is available."
    
          - alert: KubernetesPersistentvolumeError
            expr: 'kube_persistentvolume_status_phase{phase=~"Failed|Pending", job="kube-state-metrics"} > 0'
            for: 0m
            labels:
              severity: critical
            annotations:
              summary: Kubernetes PersistentVolumeClaim pending ({{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }})
              description: "Persistent volume {{ $labels.persistentvolume }} is in bad state"
    
          - alert: KubernetesStatefulsetDown
            expr: "kube_statefulset_replicas != kube_statefulset_status_replicas_ready > 0"
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: Kubernetes StatefulSet down ({{ $labels.namespace }}/{{ $labels.statefulset }})
              description: "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} went down"
    
          - alert: KubernetesHpaScaleInability
            expr: 'kube_horizontalpodautoscaler_status_condition{status="false", condition="AbleToScale"} == 1'
            for: 2m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes HPA scale inability (instance {{ $labels.instance }})
              description: "HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler }} is unable to scale"
    
          - alert: KubernetesHpaMetricsUnavailability
            expr: 'kube_horizontalpodautoscaler_status_condition{status="false", condition="ScalingActive"} == 1'
            for: 0m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes HPA metrics unavailability (instance {{ $labels.instance }})
              description: "HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler }} is unable to collect metrics"
    
          - alert: KubernetesHpaScaleMaximum
            expr: "kube_horizontalpodautoscaler_status_desired_replicas >= kube_horizontalpodautoscaler_spec_max_replicas"
            for: 2m
            labels:
              severity: info
            annotations:
              summary: Kubernetes HPA scale maximum (instance {{ $labels.instance }})
              description: "HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler }} has hit maximum number of desired pods"
    
          - alert: KubernetesHpaUnderutilized
            expr: "max(quantile_over_time(0.5, kube_horizontalpodautoscaler_status_desired_replicas[1d]) == kube_horizontalpodautoscaler_spec_min_replicas) by (horizontalpodautoscaler) > 3"
            for: 0m
            labels:
              severity: info
            annotations:
              summary: Kubernetes HPA underutilized (instance {{ $labels.instance }})
              description: "HPA {{ $labels.namespace }}/{{ $labels.horizontalpodautoscaler }} is constantly at minimum replicas for 50% of the time. Potential cost saving here."
    
          - alert: KubernetesPodNotHealthy
            expr: 'sum by (namespace, pod) (kube_pod_status_phase{phase=~"Pending|Unknown|Failed"}) > 0'
            for: 15m
            labels:
              severity: critical
            annotations:
              summary: Kubernetes Pod not healthy ({{ $labels.namespace }}/{{ $labels.pod }})
              description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-running state for longer than 15 minutes."
    
          - alert: KubernetesPodCrashLooping
            expr: "increase(kube_pod_container_status_restarts_total[1m]) > 3"
            for: 2m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes pod crash looping ({{ $labels.namespace }}/{{ $labels.pod }})
              description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is crash looping"
    
          - alert: KubernetesReplicasetReplicasMismatch
            expr: "kube_replicaset_spec_replicas != kube_replicaset_status_ready_replicas"
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes ReplicasSet mismatch ({{ $labels.namespace }}/{{ $labels.replicaset }})
              description: "ReplicaSet {{ $labels.namespace }}/{{ $labels.replicaset }} replicas mismatch"
    
          - alert: KubernetesDeploymentReplicasMismatch
            expr: "kube_deployment_spec_replicas != kube_deployment_status_replicas_available"
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes Deployment replicas mismatch ({{ $labels.namespace }}/{{ $labels.deployment }})
              description: "Deployment {{ $labels.namespace }}/{{ $labels.deployment }} replicas mismatch"
    
          - alert: KubernetesStatefulsetReplicasMismatch
            expr: "kube_statefulset_status_replicas_ready != kube_statefulset_status_replicas"
            for: 1m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes StatefulSet replicas mismatch (instance {{ $labels.instance }})
              description: "StatefulSet does not match the expected number of replicas."
    
          - alert: KubernetesDeploymentGenerationMismatch
            expr: "kube_deployment_status_observed_generation != kube_deployment_metadata_generation"
            for: 10m
            labels:
              severity: critical
            annotations:
              summary: Kubernetes Deployment generation mismatch ({{ $labels.namespace }}/{{ $labels.deployment }})
              description: "Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has failed but has not been rolled back."
    
          - alert: KubernetesStatefulsetGenerationMismatch
            expr: "kube_statefulset_status_observed_generation != kube_statefulset_metadata_generation"
            for: 10m
            labels:
              severity: critical
            annotations:
              summary: Kubernetes StatefulSet generation mismatch ({{ $labels.namespace }}/{{ $labels.statefulset }})
              description: "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has failed but has not been rolled back."
    
          - alert: KubernetesStatefulsetUpdateNotRolledOut
            expr: "max without (revision) (kube_statefulset_status_current_revision unless kube_statefulset_status_update_revision) * (kube_statefulset_replicas != kube_statefulset_status_replicas_updated)"
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes StatefulSet update not rolled out ({{ $labels.namespace }}/{{ $labels.statefulset }})
              description: "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update has not been rolled out."
    
          - alert: KubernetesDaemonsetRolloutStuck
            expr: "kube_daemonset_status_number_ready / kube_daemonset_status_desired_number_scheduled * 100 < 100 or kube_daemonset_status_desired_number_scheduled - kube_daemonset_status_current_number_scheduled > 0"
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes DaemonSet rollout stuck ({{ $labels.namespace }}/{{ $labels.daemonset }})
              description: "Some Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are not scheduled or not ready"
    
          - alert: KubernetesDaemonsetMisscheduled
            expr: "kube_daemonset_status_number_misscheduled > 0"
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: Kubernetes DaemonSet misscheduled ({{ $labels.namespace }}/{{ $labels.daemonset }})
              description: "Some Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are running where they are not supposed to run"
    
          - alert: KubernetesCronjobTooLong
            expr: "time() - kube_cronjob_next_schedule_time > 3600"
            for: 0m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes CronJob too long ({{ $labels.namespace }}/{{ $labels.cronjob }})
              description: "CronJob {{ $labels.namespace }}/{{ $labels.cronjob }} is taking more than 1h to complete."
    
          - alert: KubernetesJobSlowCompletion
            expr: "kube_job_spec_completions - kube_job_status_succeeded - kube_job_status_failed > 0"
            for: 12h
            labels:
              severity: critical
            annotations:
              summary: Kubernetes job slow completion ({{ $labels.namespace }}/{{ $labels.job_name }})
              description: "Kubernetes Job {{ $labels.namespace }}/{{ $labels.job_name }} did not complete in time."
    
          - alert: KubernetesApiServerErrors
            expr: 'sum(rate(apiserver_request_total{job="apiserver",code=~"^(?:5..)$"}[1m])) / sum(rate(apiserver_request_total{job="apiserver"}[1m])) * 100 > 3'
            for: 2m
            labels:
              severity: critical
            annotations:
              summary: Kubernetes API server errors (instance {{ $labels.instance }})
              description: "Kubernetes API server is experiencing high error rate"
    
          - alert: KubernetesApiClientErrors
            expr: '(sum(rate(rest_client_requests_total{code=~"(4|5).."}[1m])) by (instance, job) / sum(rate(rest_client_requests_total[1m])) by (instance, job)) * 100 > 1'
            for: 2m
            labels:
              severity: critical
            annotations:
              summary: Kubernetes API client errors (instance {{ $labels.instance }})
              description: "Kubernetes API client is experiencing high error rate"
    
          - alert: KubernetesClientCertificateExpiresNextWeek
            expr: 'apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 7*24*60*60'
            for: 0m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes client certificate expires next week (instance {{ $labels.instance }})
              description: "A client certificate used to authenticate to the apiserver is expiring next week."
    
          - alert: KubernetesClientCertificateExpiresSoon
            expr: 'apiserver_client_certificate_expiration_seconds_count{job="apiserver"} > 0 and histogram_quantile(0.01, sum by (job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job="apiserver"}[5m]))) < 24*60*60'
            for: 0m
            labels:
              severity: critical
            annotations:
              summary: Kubernetes client certificate expires soon (instance {{ $labels.instance }})
              description: "A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours."
    
          - alert: KubernetesApiServerLatency
            expr: 'histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{subresource!="log",verb!~"^(?:CONNECT|WATCHLIST|WATCH|PROXY)$"} [10m])) WITHOUT (instance, resource)) > 1'
            for: 2m
            labels:
              severity: warning
            annotations:
              summary: Kubernetes API server latency (instance {{ $labels.instance }})
              description: "Kubernetes API server has a 99th percentile latency of {{ $value }} seconds for {{ $labels.verb }} {{ $labels.resource }}."
